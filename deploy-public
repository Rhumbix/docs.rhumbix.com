#!/bin/bash

# COLORS!
BLACK='\033[0;30m'
RED='\033[0;31m'
GREEN='\033[0;32m'
BROWN='\033[0;33m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
GRAY='\033[0;37m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

if [ "$1" == "-h" -o "$1" == "--help" -o "$1" == "man" ]; then
  echo "Remove sensitive data from a rendered swagger.json and deploy the updates to docs.rhumbix.com."
  echo "Either provide the path to the *RENDERED* json or this script will infer its location."
  echo "Usage: `basename $0` /path/to/rendered/swagger/for/public-api.json"
  exit 0
fi

IS_PROD=false
THISDIR=$( cd $(dirname $0) ; pwd )

UPDIR=$( cd .. ; pwd )
SWAGGER_PATH="$UPDIR/rmbx_django/public-api/.swagger-public-api.rendered.json"
if [ "$1" ]; then
  SWAGGER_PATH=$1
fi

if [ ! -f "$SWAGGER_PATH" ]; then
    echo -e "${RED}* $SWAGGER_PATH does not exist. Cannot clean swagger for docs.rhumbix.com. Exiting.${NC}"
    exit 1
fi

THIS_VERSION=$(eval "$THISDIR/search_json.py \"$SWAGGER_PATH\" \"info.version\"")
THIS_HOST=$(eval "$THISDIR/search_json.py \"$SWAGGER_PATH\" host")
if [[ $THIS_HOST == *"async-api.dev.rhumbix.com"* ]]; then
    THIS_ENV="dev"
elif [[ $THIS_HOST == *"async-api.rc.rhumbix.com"* ]]; then
    THIS_ENV="rc"
elif [[ $THIS_HOST == *"async-api.hf.rhumbix.com"* ]]; then
    THIS_ENV="hf"
elif [[ $THIS_HOST == *"async-api.rhumbix.com"* ]]; then
    if [[ -z $THIS_VERSION ]]; then
        echo 'Could not find api version in rendered swagger info.version key. $THIS_VERSION'
        exit 1
    else
        # calling this "version" instead of "prod" because docs.rhumbix.com/version is better
        IS_PROD=true
        THIS_ENV="version"
    fi
else
    echo "Could not find matching criteria for dev, rc, or prod in rendered swagger 'host' key."
    echo "Expected some form of async-api.*rhumbix.com"
    exit 1
fi

FNAME="swagger-public-api-docs.json"
ENVDIR="$THISDIR/$THIS_ENV"
ENV_VER_DIR="$THIS_ENV/$THIS_VERSION" # dev/1.0.1 for example
VERSIONDIR="$ENVDIR/$THIS_VERSION"
OUTFILE="$VERSIONDIR/$FNAME"

if [ ! -d "$VERSIONDIR" ]; then
    echo -e "${RED}* $VERSIONDIR does not exist. Creating it.${NC}"
    mkdir -p "$VERSIONDIR"
fi

CMD="$THISDIR/clean_json.py $SWAGGER_PATH -r \"^x-amazon.?\" -o $OUTFILE"
if eval $CMD ; then
    echo -e "${GREEN}* New swagger cleaned and ready for $THIS_ENV: $OUTFILE.${NC}"
else
    exit 1
fi

### RENDER HTML !!! ###
read -d '' INDEX_HTML_TEMPLATE << EOF
<!DOCTYPE html>
<html>
  <head>
    <title>Rhumbix Public API Docs</title>
    <!-- needed for adaptive design -->
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!--
    ReDoc doesn't change outer page styles
    -->
    <style>
      body {
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
  <body>
    <redoc spec-url='https://raw.githubusercontent.com/Rhumbix/docs.rhumbix.com/master/$ENV_VER_DIR/swagger-public-api-docs.json'></redoc>
    <script src="https://rebilly.github.io/ReDoc/releases/v1.18.1/redoc.min.js"> </script>
  </body>
</html>
EOF
### END OF RENDERING HTML ###

# Render index.html for the specific version
if echo "$INDEX_HTML_TEMPLATE" > "$VERSIONDIR/index.html"; then
    echo -e "${GREEN}* New index rendered for $THIS_ENV: $VERSIONDIR/index.html${NC}"
else
    echo -e "Could not print index html template to $VERSIONDIR/index.html"
    exit 1
fi

# render index.html for main dir
if [ $IS_PROD == true ]; then
    MAIN_INDEX_DIR=$THISDIR
else
    MAIN_INDEX_DIR=$ENVDIR
fi
if echo "$INDEX_HTML_TEMPLATE" > "$MAIN_INDEX_DIR/index.html"; then
    echo -e "${GREEN}* Index also rendered in main: $MAIN_INDEX_DIR/index.html${NC}"
else
    echo -e "Could not print index html template to $MAIN_INDEX_DIR/index.html"
    exit 1
fi

git status
